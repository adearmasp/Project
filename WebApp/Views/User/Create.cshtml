@model WebApp.Controllers.InputModel

@{
    ViewData["Title"] = "Create";
}
<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a asp-area="" asp-controller="Customer" asp-action="List" class="navbar-brand">Home</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                @if (User.IsInRole("AdminRole") || User.IsInRole("UserRole"))
                {
                    <li><a asp-area="" asp-controller="Customer" asp-action="List">Customers</a></li>
                }
                @if (User.IsInRole("AdminRole"))
                {
                    <li><a asp-area="" asp-controller="User" asp-action="List">Users</a></li>
                }
                <li><a asp-area="" asp-controller="Home" asp-action="Contact">Contact</a></li>
            </ul>
            <partial name="_LoginPartial" />
        </div>
    </div>
</nav>


<h2>Create</h2>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsAdmin" /> @Html.DisplayNameFor(model => model.IsAdmin)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" type="email" class="form-control" id="email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label">Password</label>
                <input asp-for="Password" type="password" class="form-control" id="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label">Password Confirm</label>
                <input asp-for="ConfirmPassword" type="password" class="form-control" id="passwordConfirm" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default disabled" id="send" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="List">Back to List</a>
</div>

@section Scripts {

    <script type="text/javascript">

        $(document).ready(function () {

            $("#email").keyup(function () {
                var email = $("#email").val();
                if (isValidEmailAddress(email)) {
                    $(this).removeClass("is-invalid");
                    $(this).addClass("is-valid");
                    if (isValidForm()) {
                        $("#send").removeClass("disabled");
                    }
                    else {
                        $("#send").addClass("disabled");
                    }
                }
                else {
                    $(this).removeClass("is-valid");
                    $(this).addClass("is-invalid");
                    $("#send").addClass("disabled");
                }
            });

            $("#passwordConfirm").keyup(function () {
                var passwordConfirm = $("#passwordConfirm").val().trim();
                if (passwordConfirm != '') {
                    $(this).removeClass("is-invalid");
                    $(this).addClass("is-valid");
                    if (isValidForm()) {
                        $("#send").removeClass("disabled");
                    }
                    else {
                        $("#send").addClass("disabled");
                    }
                }
                else {
                    $(this).removeClass("is-valid");
                    $(this).addClass("is-invalid");
                    $("#send").addClass("disabled");
                }
            });

            $("#password").keyup(function () {
                var password = $("#password").val().trim();
                if (password != '') {
                    $(this).removeClass("is-invalid");
                    $(this).addClass("is-valid");
                    if (isValidForm()) {
                        $("#send").removeClass("disabled");
                    }
                    else {
                        $("#send").addClass("disabled");
                    }
                }
                else {
                    $(this).removeClass("is-valid");
                    $(this).addClass("is-invalid");
                    $("#send").addClass("disabled");
                }
            });

            function isValidForm() {
                var passwordConfirm = $("#passwordConfirm").val().trim();
                var email = $("#email").val().trim();
                var password = $("#password").val().trim();

                return (passwordConfirm == '' || email == '' || password == '') ? false : true;
            }

            function isValidEmailAddress(emailAddress) {
                var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
                return pattern.test(emailAddress);
            };

        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
